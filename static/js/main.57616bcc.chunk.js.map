{"version":3,"sources":["App.js","reportWebVitals.js","@fake-db/mock.js","@fake-db/api/users.js","@fake-db/db/users.js","@fake-db/index.js","index.js"],"names":["App","useState","data","setData","useEffect","axios","get","then","response","map","user","fullName","email","username","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","mock","MockAdapter","onGet","reply","company","role","country","contact","currentPlan","status","avatar","onAny","passThrough","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAiCeA,MA5Bf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,KAQb,OANAC,qBAAU,WACRC,IAAMC,IAAI,4BAA4BC,MAAK,SAAUC,GACnDL,EAAQK,EAASN,WAElB,IAGD,kCACE,+BACE,wCACA,uCACA,6CAEDA,EAAKO,KAAI,SAACC,GACT,OACE,+BACE,6BAAKA,EAAKC,WACV,6BAAKD,EAAKE,QACV,6BAAKF,EAAKG,aAHHH,EAAKI,WCVTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCFCO,EAFF,I,OAAIC,GAAYnB,KCA7BkB,EAAKE,MAAM,4BAA4BC,MAAM,ICFpC,CACL,CACEZ,GAAI,EACJH,SAAU,eACVgB,QAAS,eACTC,KAAM,SACNf,SAAU,WACVgB,QAAS,cACTC,QAAS,iBACTlB,MAAO,sBACPmB,YAAa,aACbC,OAAQ,WACRC,OAAQ,IAEV,CACEnB,GAAI,EACJH,SAAU,iBACVgB,QAAS,kBACTC,KAAM,SACNf,SAAU,YACVgB,QAAS,UACTC,QAAS,iBACTlB,MAAO,sBACPmB,YAAa,OACbC,OAAQ,WAEV,CACElB,GAAI,EACJH,SAAU,iBACVgB,QAAS,eACTC,KAAM,aACNf,SAAU,WACVgB,QAAS,SACTC,QAAS,iBACTlB,MAAO,mBACPmB,YAAa,aACbC,OAAQ,UAEV,CACElB,GAAI,EACJH,SAAU,eACVgB,QAAS,eACTC,KAAM,aACNf,SAAU,UACVgB,QAAS,QACTC,QAAS,iBACTlB,MAAO,wBACPmB,YAAa,OACbC,OAAQ,YAEV,CACElB,GAAI,EACJH,SAAU,eACVgB,QAAS,gBACTC,KAAM,aACNf,SAAU,WACVgB,QAAS,WACTC,QAAS,iBACTlB,MAAO,uBACPmB,YAAa,aACbC,OAAQ,WAEV,CACElB,GAAI,EACJH,SAAU,mBACVgB,QAAS,kBACTC,KAAM,SACNf,SAAU,aACVgB,QAAS,QACTC,QAAS,iBACTlB,MAAO,2BACPmB,YAAa,UACbC,OAAQ,SACRC,OAAQ,IAEV,CACEnB,GAAI,EACJH,SAAU,mBACVgB,QAAS,gBACTC,KAAM,aACNf,SAAU,cACVgB,QAAS,SACTC,QAAS,iBACTlB,MAAO,yBACPmB,YAAa,UACbC,OAAQ,UACRC,OAAQ,IAEV,CACEnB,GAAI,EACJH,SAAU,iBACVgB,QAAS,kBACTC,KAAM,SACNf,SAAU,UACVgB,QAAS,SACTC,QAAS,iBACTlB,MAAO,sBACPmB,YAAa,aACbC,OAAQ,WAEV,CACElB,GAAI,EACJH,SAAU,kBACVgB,QAAS,iBACTC,KAAM,aACNf,SAAU,cACVgB,QAAS,QACTC,QAAS,iBACTlB,MAAO,8BACPmB,YAAa,OACbC,OAAQ,WAEV,CACElB,GAAI,GACJH,SAAU,kBACVgB,QAAS,oBACTC,KAAM,aACNf,SAAU,YACVgB,QAAS,UACTC,QAAS,iBACTlB,MAAO,4BACPmB,YAAa,UACbC,OAAQ,cCxHdT,EAAKW,QAAQC,cCIbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.57616bcc.chunk.js","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get(\"/api/users/list/all-data\").then(function (response) {\n      setData(response.data);\n    });\n  }, []);\n\n  return (\n    <table>\n      <tr>\n        <th>Nombre</th>\n        <th>Email</th>\n        <th>Username</th>\n      </tr>\n      {data.map((user) => {\n        return (\n          <tr key={user.id}>\n            <td>{user.fullName}</td>\n            <td>{user.email}</td>\n            <td>{user.username}</td>\n          </tr>\n        );\n      })}\n    </table>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import MockAdapter from 'axios-mock-adapter'\nimport axios from 'axios'\n\nconst mock = new MockAdapter(axios)\n\nexport default mock\n","import mock from '../mock';\nimport { data } from '../db/users';\n\nmock.onGet('/api/users/list/all-data').reply(200, data.users);\n","export const data = {\n  users: [\n    {\n      id: 1,\n      fullName: 'Galen Slixby',\n      company: 'Yotz PVT LTD',\n      role: 'editor',\n      username: 'gslixby0',\n      country: 'El Salvador',\n      contact: '(479) 232-9151',\n      email: 'gslixby0@abc.net.au',\n      currentPlan: 'enterprise',\n      status: 'inactive',\n      avatar: ''\n    },\n    {\n      id: 2,\n      fullName: 'Halsey Redmore',\n      company: 'Skinder PVT LTD',\n      role: 'author',\n      username: 'hredmore1',\n      country: 'Albania',\n      contact: '(472) 607-9137',\n      email: 'hredmore1@imgur.com',\n      currentPlan: 'team',\n      status: 'pending',\n    },\n    {\n      id: 3,\n      fullName: 'Marjory Sicely',\n      company: 'Oozz PVT LTD',\n      role: 'maintainer',\n      username: 'msicely2',\n      country: 'Russia',\n      contact: '(321) 264-4599',\n      email: 'msicely2@who.int',\n      currentPlan: 'enterprise',\n      status: 'active',\n    },\n    {\n      id: 4,\n      fullName: 'Cyrill Risby',\n      company: 'Oozz PVT LTD',\n      role: 'maintainer',\n      username: 'crisby3',\n      country: 'China',\n      contact: '(923) 690-6806',\n      email: 'crisby3@wordpress.com',\n      currentPlan: 'team',\n      status: 'inactive',\n    },\n    {\n      id: 5,\n      fullName: 'Maggy Hurran',\n      company: 'Aimbo PVT LTD',\n      role: 'subscriber',\n      username: 'mhurran4',\n      country: 'Pakistan',\n      contact: '(669) 914-1078',\n      email: 'mhurran4@yahoo.co.jp',\n      currentPlan: 'enterprise',\n      status: 'pending',\n    },\n    {\n      id: 6,\n      fullName: 'Silvain Halstead',\n      company: 'Jaxbean PVT LTD',\n      role: 'author',\n      username: 'shalstead5',\n      country: 'China',\n      contact: '(958) 973-3093',\n      email: 'shalstead5@shinystat.com',\n      currentPlan: 'company',\n      status: 'active',\n      avatar: ''\n    },\n    {\n      id: 7,\n      fullName: 'Breena Gallemore',\n      company: 'Jazzy PVT LTD',\n      role: 'subscriber',\n      username: 'bgallemore6',\n      country: 'Canada',\n      contact: '(825) 977-8152',\n      email: 'bgallemore6@boston.com',\n      currentPlan: 'company',\n      status: 'pending',\n      avatar: ''\n    },\n    {\n      id: 8,\n      fullName: 'Kathryne Liger',\n      company: 'Pixoboo PVT LTD',\n      role: 'author',\n      username: 'kliger7',\n      country: 'France',\n      contact: '(187) 440-0934',\n      email: 'kliger7@vinaora.com',\n      currentPlan: 'enterprise',\n      status: 'pending',\n    },\n    {\n      id: 9,\n      fullName: 'Franz Scotfurth',\n      company: 'Tekfly PVT LTD',\n      role: 'subscriber',\n      username: 'fscotfurth8',\n      country: 'China',\n      contact: '(978) 146-5443',\n      email: 'fscotfurth8@dailymotion.com',\n      currentPlan: 'team',\n      status: 'pending',\n    },\n    {\n      id: 10,\n      fullName: 'Jillene Bellany',\n      company: 'Gigashots PVT LTD',\n      role: 'maintainer',\n      username: 'jbellany9',\n      country: 'Jamaica',\n      contact: '(589) 284-6732',\n      email: 'jbellany9@kickstarter.com',\n      currentPlan: 'company',\n      status: 'inactive',\n    },\n  ]\n}","import mock from './mock'\nimport './api/users'\n\nmock.onAny().passThrough()\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport'./@fake-db';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}